#################################
##### DO NOT EDIT THIS FILE #####
#################################

## ======================================== ##
## you need to change the following section ##
## ======================================== ##

[global]
# terms of service for https://letsencrypt.org/
# you know what to do
letsencrypt_tos_agree = false

[proxy]
# add port mappings (only open the ports you need)
ports = [
    "80:80",   # http port
    "443:443", # https port
    # "25:25",   # smtp port
    # "465:465", # smtps port
    # "993:993", # imaps port
]

# create certificates, a block per certificate you want
[[certificate]]
# domains that the certificate covers, wildcards supported
# domains = ["*.example.com", "example.com"] # this covers example.com and all its subdomains
domains = ["*.example.com", "example.com"]
# letsencrypt account email for this certificate
letsencrypt_email = "your+certs@email.com"
# specify your DNS provider from the list: https://github.com/acmesh-official/acme.sh/wiki/dnsapi
dns_provider = "dns_cf"
# use "staging" for testing and "production" for production, different rate limits apply
endpoint = "staging"
[certificate.dns_env]
# add credentials for the provider (https://github.com/acmesh-official/acme.sh/wiki/dnsapi)
CF_Token = "Y_yourCloudflareTokenGoesIntoThisEnvVarX"

# # second certificate example
# [[certificate]]
# domains = ["example.com"]
# letsencrypt_email = "your+certs2@email.com"
# dns_provider = "dns_porkbun"
# endpoint = "staging"
# [certificate.dns_env]
# PORKBUN_API_KEY = "some_long_string"
# PORKBUN_SECRET_API_KEY = "some_other_long_string"

## ==================================================== ##
## the rest is optional, and should work out of the box ##
## ==================================================== ##

[nginx]
# git repo download path
repo = "nginx/repo"
# subdirectory of https://github.com/nginxinc/docker-nginx-unprivileged
flavor = "mainline/alpine-slim"
# this networking setup allows a few things:
# - the /24 subnet has 254 usable IP addresses which is enough for most setups
# - nginx container has a static IP - useful for routing and firewall rules
# - other containers don't have to have static IPs
container_ip = "192.168.255.254"
# 192.168.255.254 is the last usable IP of the subnet 192.168.255.0/24
subnet = "192.168.255.0/24"
# uid and gid for the user in the certs container
uid = 12000
gid = 12000

[certs]
acmed_repo = "certs/acmed/repo"
acmesh_repo = "certs/acmesh/repo"
uid = 12100
gid = 12100

[dockergen]
repo = "dockergen/repo"
uid = 12200
gid = 12200
